<<<<<<< HEAD
export type LilconfigResult = null | {
=======
export declare type LilconfigResult = null | {
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
    filepath: string;
    config: any;
    isEmpty?: boolean;
};
interface OptionsBase {
    cache?: boolean;
    stopDir?: string;
    searchPlaces?: string[];
    ignoreEmptySearchPlaces?: boolean;
    packageProp?: string | string[];
}
<<<<<<< HEAD
export type Transform = TransformSync | ((result: LilconfigResult) => Promise<LilconfigResult>);
export type TransformSync = (result: LilconfigResult) => LilconfigResult;
type LoaderResult = any;
export type LoaderSync = (filepath: string, content: string) => LoaderResult;
export type Loader = LoaderSync | ((filepath: string, content: string) => Promise<LoaderResult>);
export type Loaders = Record<string, Loader>;
export type LoadersSync = Record<string, LoaderSync>;
=======
export declare type Transform = TransformSync | ((result: LilconfigResult) => Promise<LilconfigResult>);
export declare type TransformSync = (result: LilconfigResult) => LilconfigResult;
declare type LoaderResult = any;
export declare type LoaderSync = (filepath: string, content: string) => LoaderResult;
export declare type Loader = LoaderSync | ((filepath: string, content: string) => Promise<LoaderResult>);
export declare type Loaders = Record<string, Loader>;
export declare type LoadersSync = Record<string, LoaderSync>;
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
export interface Options extends OptionsBase {
    loaders?: Loaders;
    transform?: Transform;
}
export interface OptionsSync extends OptionsBase {
    loaders?: LoadersSync;
    transform?: TransformSync;
}
<<<<<<< HEAD
export declare const defaultLoadersSync: LoadersSync;
export declare const defaultLoaders: Loaders;
type ClearCaches = {
=======
export declare const defaultLoaders: LoadersSync;
declare type ClearCaches = {
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
    clearLoadCache: () => void;
    clearSearchCache: () => void;
    clearCaches: () => void;
};
<<<<<<< HEAD
type AsyncSearcher = {
=======
declare type AsyncSearcher = {
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
    search(searchFrom?: string): Promise<LilconfigResult>;
    load(filepath: string): Promise<LilconfigResult>;
} & ClearCaches;
export declare function lilconfig(name: string, options?: Partial<Options>): AsyncSearcher;
<<<<<<< HEAD
type SyncSearcher = {
=======
declare type SyncSearcher = {
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
    search(searchFrom?: string): LilconfigResult;
    load(filepath: string): LilconfigResult;
} & ClearCaches;
export declare function lilconfigSync(name: string, options?: OptionsSync): SyncSearcher;
export {};
