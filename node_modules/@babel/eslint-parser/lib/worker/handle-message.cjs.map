<<<<<<< HEAD
{"version":3,"names":["_astInfo","require","_configuration","_client","babel","maybeParse","module","exports","handleMessage","action","payload","ACTIONS","GET_VERSION","version","GET_TYPES_INFO","FLOW_FLIPPED_ALIAS_KEYS","types","FLIPPED_ALIAS_KEYS","Flow","VISITOR_KEYS","GET_TOKEN_LABELS","getTokLabels","GET_VISITOR_KEYS","getVisitorKeys","MAYBE_PARSE","normalizeBabelParseConfig","options","then","code","MAYBE_PARSE_SYNC","normalizeBabelParseConfigSync","Error"],"sources":["../../src/worker/handle-message.cts"],"sourcesContent":["import babel = require(\"./babel-core.cts\");\nimport maybeParse = require(\"./maybeParse.cts\");\nimport { getVisitorKeys, getTokLabels } from \"./ast-info.cts\";\nimport {\n  normalizeBabelParseConfig,\n  normalizeBabelParseConfigSync,\n} from \"./configuration.cts\";\n\nimport { ACTIONS } from \"../client.cts\";\n\nexport = function handleMessage(action: ACTIONS, payload: any) {\n  switch (action) {\n    case ACTIONS.GET_VERSION:\n      return babel.version;\n    case ACTIONS.GET_TYPES_INFO:\n      return {\n        FLOW_FLIPPED_ALIAS_KEYS: babel.types.FLIPPED_ALIAS_KEYS.Flow,\n        VISITOR_KEYS: babel.types.VISITOR_KEYS,\n      };\n    case ACTIONS.GET_TOKEN_LABELS:\n      return getTokLabels();\n    case ACTIONS.GET_VISITOR_KEYS:\n      return getVisitorKeys();\n    case ACTIONS.MAYBE_PARSE:\n      return normalizeBabelParseConfig(payload.options).then(options =>\n        maybeParse(payload.code, options),\n      );\n    case ACTIONS.MAYBE_PARSE_SYNC:\n      if (!USE_ESM) {\n        return maybeParse(\n          payload.code,\n          normalizeBabelParseConfigSync(payload.options),\n        );\n      }\n  }\n\n  throw new Error(`Unknown internal parser worker action: ${action}`);\n};\n"],"mappings":";;AAEA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AAKA,IAAAE,OAAA,GAAAF,OAAA;AAAwC,MARjCG,KAAK,GAAAH,OAAA,CAAW,kBAAkB;AAAA,MAClCI,UAAU,GAAAJ,OAAA,CAAW,kBAAkB;AAAAK,MAAA,CAAAC,OAAA,GASrC,SAASC,aAAaA,CAACC,MAAe,EAAEC,OAAY,EAAE;EAC7D,QAAQD,MAAM;IACZ,KAAKE,eAAO,CAACC,WAAW;MACtB,OAAOR,KAAK,CAACS,OAAO;IACtB,KAAKF,eAAO,CAACG,cAAc;MACzB,OAAO;QACLC,uBAAuB,EAAEX,KAAK,CAACY,KAAK,CAACC,kBAAkB,CAACC,IAAI;QAC5DC,YAAY,EAAEf,KAAK,CAACY,KAAK,CAACG;MAC5B,CAAC;IACH,KAAKR,eAAO,CAACS,gBAAgB;MAC3B,OAAO,IAAAC,qBAAY,EAAC,CAAC;IACvB,KAAKV,eAAO,CAACW,gBAAgB;MAC3B,OAAO,IAAAC,uBAAc,EAAC,CAAC;IACzB,KAAKZ,eAAO,CAACa,WAAW;MACtB,OAAO,IAAAC,wCAAyB,EAACf,OAAO,CAACgB,OAAO,CAAC,CAACC,IAAI,CAACD,OAAO,IAC5DrB,UAAU,CAACK,OAAO,CAACkB,IAAI,EAAEF,OAAO,CAClC,CAAC;IACH,KAAKf,eAAO,CAACkB,gBAAgB;MACb;QACZ,OAAOxB,UAAU,CACfK,OAAO,CAACkB,IAAI,EACZ,IAAAE,4CAA6B,EAACpB,OAAO,CAACgB,OAAO,CAC/C,CAAC;MACH;EACJ;EAEA,MAAM,IAAIK,KAAK,CAAE,0CAAyCtB,MAAO,EAAC,CAAC;AACrE,CAAC"}
=======
{"version":3,"names":["babel","require","maybeParse","getVisitorKeys","getTokLabels","normalizeBabelParseConfig","normalizeBabelParseConfigSync","module","exports","handleMessage","action","payload","version","FLOW_FLIPPED_ALIAS_KEYS","types","FLIPPED_ALIAS_KEYS","Flow","VISITOR_KEYS","options","then","code","Error"],"sources":["../../src/worker/handle-message.cjs"],"sourcesContent":["const babel = require(\"./babel-core.cjs\");\nconst maybeParse = require(\"./maybeParse.cjs\");\nconst { getVisitorKeys, getTokLabels } = require(\"./ast-info.cjs\");\nconst {\n  normalizeBabelParseConfig,\n  normalizeBabelParseConfigSync,\n} = require(\"./configuration.cjs\");\n\nmodule.exports = function handleMessage(action, payload) {\n  switch (action) {\n    case \"GET_VERSION\":\n      return babel.version;\n    case \"GET_TYPES_INFO\":\n      return {\n        FLOW_FLIPPED_ALIAS_KEYS: babel.types.FLIPPED_ALIAS_KEYS.Flow,\n        VISITOR_KEYS: babel.types.VISITOR_KEYS,\n      };\n    case \"GET_TOKEN_LABELS\":\n      return getTokLabels();\n    case \"GET_VISITOR_KEYS\":\n      return getVisitorKeys();\n    case \"MAYBE_PARSE\":\n      return normalizeBabelParseConfig(payload.options).then(options =>\n        maybeParse(payload.code, options),\n      );\n    case \"MAYBE_PARSE_SYNC\":\n      if (!USE_ESM) {\n        return maybeParse(\n          payload.code,\n          normalizeBabelParseConfigSync(payload.options),\n        );\n      }\n  }\n\n  throw new Error(`Unknown internal parser worker action: ${action}`);\n};\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACzC,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC9C,MAAM;EAAEE,cAAc;EAAEC;AAAa,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAClE,MAAM;EACJI,yBAAyB;EACzBC;AACF,CAAC,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AAElCM,MAAM,CAACC,OAAO,GAAG,SAASC,aAAaA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACvD,QAAQD,MAAM;IACZ,KAAK,aAAa;MAChB,OAAOV,KAAK,CAACY,OAAO;IACtB,KAAK,gBAAgB;MACnB,OAAO;QACLC,uBAAuB,EAAEb,KAAK,CAACc,KAAK,CAACC,kBAAkB,CAACC,IAAI;QAC5DC,YAAY,EAAEjB,KAAK,CAACc,KAAK,CAACG;MAC5B,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAOb,YAAY,CAAC,CAAC;IACvB,KAAK,kBAAkB;MACrB,OAAOD,cAAc,CAAC,CAAC;IACzB,KAAK,aAAa;MAChB,OAAOE,yBAAyB,CAACM,OAAO,CAACO,OAAO,CAAC,CAACC,IAAI,CAACD,OAAO,IAC5DhB,UAAU,CAACS,OAAO,CAACS,IAAI,EAAEF,OAAO,CAClC,CAAC;IACH,KAAK,kBAAkB;MACP;QACZ,OAAOhB,UAAU,CACfS,OAAO,CAACS,IAAI,EACZd,6BAA6B,CAACK,OAAO,CAACO,OAAO,CAC/C,CAAC;MACH;EACJ;EAEA,MAAM,IAAIG,KAAK,CAAE,0CAAyCX,MAAO,EAAC,CAAC;AACrE,CAAC"}
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
