'use strict';

var callBound = require('call-bind/callBound');

var $SymbolValueOf = callBound('Symbol.prototype.valueOf', true);

<<<<<<< HEAD
=======
var Type = require('./Type');

>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
// https://262.ecma-international.org/9.0/#sec-thissymbolvalue

module.exports = function thisSymbolValue(value) {
	if (!$SymbolValueOf) {
		throw new SyntaxError('Symbols are not supported; thisSymbolValue requires that `value` be a Symbol or a Symbol object');
	}
<<<<<<< HEAD
	if (typeof value === 'symbol') {
=======
	if (Type(value) === 'Symbol') {
>>>>>>> e6b1d803f4086f6fbb8d461652672f5ed5086063
		return value;
	}
	return $SymbolValueOf(value);
};
